{"ast":null,"code":"var _jsxFileName = \"/Users/lucasjones/Desktop/repos/Web-Development-Practice/freeCodeCamp projects/quote-machine/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport Header from './Header.js';\nimport PlanetBox from './PlanetBox.js';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [data, setData] = useState('');\n  // const dynamicArr = data.slice()\n  let url = 'https://swapi.dev/api/planets/';\n  useEffect(() => {\n    const fetchIt = async () => {\n      const res = await fetch(url);\n      var data = await res.json();\n      setData(data.results);\n    };\n    fetchIt();\n    console.log('initial render');\n  }, []);\n\n  // function getRandomPlanet(remainingPlanets) {\n  // \tconst selectedPlanet = remainingPlanets[Math.floor(Math.random() * remainingPlanets.length)]\n  // \t// console.log('selected', selectedPlanet)\n  // \treturn selectedPlanet\n  // }\n\n  function updateRemainingPlanets(planetsArray, currentPlanet) {\n    const index = planetsArray.indexOf(currentPlanet);\n    planetsArray.splice(index, 1);\n    // console.log('remaining planets', planetsArray)\n    return planetsArray;\n  }\n\n  // function restoreRemainingPlanets(previouslyEmpty, full) {\n  // \treturn previouslyEmpty.concat(full)\n  // }\n\n  function getRandomIndex(totalIndices) {\n    return Math.floor(Math.random() * (totalIndices - 1));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-container\",\n      children: !data ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: \"loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }, this) : /*#__PURE__*/_jsxDEV(PlanetBox, {\n        data: data\n        // dynamicArr={dynamicArr}\n        ,\n        getRandomIndex: getRandomIndex,\n        getRandomPlanet: getRandomPlanet,\n        updateRemainingPlanets: updateRemainingPlanets\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 3\n  }, this);\n}\n_s(App, \"VZqd8eS65aqgHhr94QvD8B0VC/4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Header","PlanetBox","useState","useEffect","App","data","setData","url","fetchIt","res","fetch","json","results","console","log","updateRemainingPlanets","planetsArray","currentPlanet","index","indexOf","splice","getRandomIndex","totalIndices","Math","floor","random","getRandomPlanet"],"sources":["/Users/lucasjones/Desktop/repos/Web-Development-Practice/freeCodeCamp projects/quote-machine/src/App.js"],"sourcesContent":["import './App.css';\nimport Header from './Header.js'\nimport PlanetBox from './PlanetBox.js';\nimport { useState, useEffect} from 'react';\n\nfunction App() {\n\tconst [data, setData] = useState('');\n\t// const dynamicArr = data.slice()\n\tlet url = 'https://swapi.dev/api/planets/'\n\n\tuseEffect(() => {\n\t\tconst fetchIt = async () => {\n\t\tconst res = await fetch(url);\n\t\tvar data = await res.json()\n\n\t\tsetData(data.results)\n\t\t}\n\n\t\tfetchIt()\n\n\t\tconsole.log('initial render')\n\t}, [])\n\n\n\t\n\t// function getRandomPlanet(remainingPlanets) {\n\t// \tconst selectedPlanet = remainingPlanets[Math.floor(Math.random() * remainingPlanets.length)]\n\t// \t// console.log('selected', selectedPlanet)\n\t// \treturn selectedPlanet\n\t// }\n\n\n\t\n\n\t\n\tfunction updateRemainingPlanets(planetsArray, currentPlanet) {\n\t\tconst index = planetsArray.indexOf(currentPlanet)\n\t\tplanetsArray.splice(index, 1)\n\t\t// console.log('remaining planets', planetsArray)\n\t\treturn planetsArray\n\t}\n\n\t// function restoreRemainingPlanets(previouslyEmpty, full) {\n\t// \treturn previouslyEmpty.concat(full)\n\t// }\n\n\tfunction getRandomIndex(totalIndices) {\n\t\t\treturn Math.floor(Math.random() * (totalIndices - 1))\n\t\t}\n\n\n\n\treturn (\n\t\t<div className='App'>\n\t\t\t<Header />\n\t\t\t<div className='content-container'>\n\t\t\t\t{\n\t\t\t\t\t!data ? \n\t\t\t\t\t\t<div className='loading'>loading...</div> \n\t\t\t\t\t\t: \n\t\t\t\t\t<PlanetBox \n\t\t\t\t\t\tdata={data} \n\t\t\t\t\t\t// dynamicArr={dynamicArr}\n\t\t\t\t\t\tgetRandomIndex={getRandomIndex}\n\t\t\t\t\t\tgetRandomPlanet={getRandomPlanet}\n\t\t\t\t\t\tupdateRemainingPlanets={updateRemainingPlanets}\n\t\t\t\t\t/>\n\t\t\t\t}\t\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default App;\n\n\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,MAAM,MAAM,aAAa;AAChC,OAAOC,SAAS,MAAM,gBAAgB;AACtC,SAASC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAAC;AAE3C,SAASC,GAAG,GAAG;EAAA;EACd,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EACpC;EACA,IAAIK,GAAG,GAAG,gCAAgC;EAE1CJ,SAAS,CAAC,MAAM;IACf,MAAMK,OAAO,GAAG,YAAY;MAC5B,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAACH,GAAG,CAAC;MAC5B,IAAIF,IAAI,GAAG,MAAMI,GAAG,CAACE,IAAI,EAAE;MAE3BL,OAAO,CAACD,IAAI,CAACO,OAAO,CAAC;IACrB,CAAC;IAEDJ,OAAO,EAAE;IAETK,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;EAC9B,CAAC,EAAE,EAAE,CAAC;;EAIN;EACA;EACA;EACA;EACA;;EAMA,SAASC,sBAAsB,CAACC,YAAY,EAAEC,aAAa,EAAE;IAC5D,MAAMC,KAAK,GAAGF,YAAY,CAACG,OAAO,CAACF,aAAa,CAAC;IACjDD,YAAY,CAACI,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC;IAC7B;IACA,OAAOF,YAAY;EACpB;;EAEA;EACA;EACA;;EAEA,SAASK,cAAc,CAACC,YAAY,EAAE;IACpC,OAAOC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,IAAIH,YAAY,GAAG,CAAC,CAAC,CAAC;EACtD;EAID,oBACC;IAAK,SAAS,EAAC,KAAK;IAAA,wBACnB,QAAC,MAAM;MAAA;MAAA;MAAA;IAAA,QAAG,eACV;MAAK,SAAS,EAAC,mBAAmB;MAAA,UAEhC,CAACjB,IAAI,gBACJ;QAAK,SAAS,EAAC,SAAS;QAAA,UAAC;MAAU;QAAA;QAAA;QAAA;MAAA,QAAM,gBAE1C,QAAC,SAAS;QACT,IAAI,EAAEA;QACN;QAAA;QACA,cAAc,EAAEgB,cAAe;QAC/B,eAAe,EAAEK,eAAgB;QACjC,sBAAsB,EAAEX;MAAuB;QAAA;QAAA;QAAA;MAAA;IAC9C;MAAA;MAAA;MAAA;IAAA,QAEE;EAAA;IAAA;IAAA;IAAA;EAAA,QACD;AAER;AAAC,GAlEQX,GAAG;AAAA,KAAHA,GAAG;AAoEZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}