{"ast":null,"code":"var _jsxFileName = \"/Users/lucasjones/Desktop/repos/Web-Development-Practice/freeCodeCamp projects/quote-machine/src/QuoteBox.js\",\n  _s = $RefreshSig$();\nimport Button from './Button.js';\nimport twittericon from './images/twittericon.png';\nimport { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction QuoteBox() {\n  _s();\n  const [data, setData] = useState('');\n  const [count, setCount] = useState(0);\n  // const dataFetchedRef = useRef(false);\n  // let url = 'https://swapi.dev/api/planets/'\n  // let url = 'http://jsonplaceholder.typicode.com/albums/'\n  // let url = 'https://jsonplaceholder.typicode.com/users'\n  const url = 'https://api.adviceslip.com/advice';\n  useEffect(() => {\n    // if (dataFetchedRef.current) return;\n    // dataFetchedRef.current = true;\n    const fetchIt = async () => {\n      const res = await fetch('https://jsonplaceholder.typicode.com/users', {\n        cache: 'no-cache'\n      });\n      var data = await res.json();\n      setData(data);\n    };\n    fetchIt();\n  }, []);\n\n  // useEffect(() => {\n  // \tconsole.log(count)\n  // })\n\n  function handleClick() {\n    console.log(count);\n    setCount(prevcount => prevcount + 1);\n    console.log(count);\n  }\n\n  // useEffect(() => {\n  // \tconst fetchDat = async () => {\n  // \t\ttry {\n  // \t\t\tvar response = await fetch(url)\n  // \t\t\tvar daz = await response.json()\n  // \t\t\tconsole.log('daz:', daz)\n  // \t\t\tsetData(daz)\n  // \t\t} catch (error) {\n  // \t\t\tconsole.log('errrrrr', error)\n  // \t\t}\n  // \t}\n  // \t// document.title = `You clicked ${count} times`;\n  // \tsetData(count);\n  // \tfetchDat();\n  // }, [])\n\n  // function handleClick() {\n  // \tsetCount(prevcount => prevcount + 1)\n  // \t// try {\n  // \t// \tfetchDat()\n  // \t// } catch (error) {\n  // \t// \tconsole.log('errrrrr2', error)\n  // \t// }\n  // }\n\n  // useEffect(() => {\n  // \tfetchData();\n  // }, []);\n\n  // const url = 'https://api.adviceslip.com/advice';\n  // const fetchData = async () => {\n  // \ttry {\n  // \t\tvar response = await fetch(url);\n  // \t\tvar json = await response.json();\n  // \t\tsetData(json.slip.advice);\n  // \t} catch (error) {\n  // \t\tconsole.log('error:', error);\n  // \t}\n  // }\n\n  // useEffect(() => {\n  // \tswapps()\n  // }, [])\n\n  // const swapps = async () => {\n  // \tconst response = await fetch(url);\n  // \tconst dataz = await response.json()\n  // \tsetData(dataz)\n  // }\n\n  // var ressies = data.results\n\n  // if (ressies) {\n  // \tvar item = ressies[Math.floor(Math.random() * ressies.length)];\n  // \tconsole.log(item)\n  // }\t\n\n  // if (!ressies) {\n  // \treturn <div>LOADING</div>\n  // }\n\n  // const fetchData = async () => {\n  // \tconst response = await fetch(url);\n  // \tconst datam = await response.json()\n  // \tsetData(datam)\n  // }\n\n  // useEffect(() => {\n  // \tfetchData()\n  // }, [])\n\n  // const updateData = () => {\n  // \tfetch(url)\n  // \t\t.then(response => {\n  // \t\t\treturn response.json()\n  // \t\t})\n  // \t\t.then(datas => {\n  // \t\t\tsetData(datas)\n  // \t\t})\n  // }\n\n  // var ressies = data.results\n\n  // if (ressies) {\n  // \tvar item = ressies[Math.floor(Math.random() * ressies.length)];\n  // \tconsole.log(item)\n  // }\t\n\n  // console.log(data)\n\n  // useEffect(() => {\n  // \tfetch(url)\n  // \t\t.then(res => res.json())\n  // \t\t.then(json => console.log(json))\n  // \t\t.then(datz => setData(datz))\n  // \t\t.catch(err => console.log(err));\n  // }, [])\n\n  // console.log(data)\n\n  // if (!data) {\n  // \treturn <div>LOADING</div>\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"quote-box\",\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      id: \"author\",\n      children: \"-Author\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"new-quote\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClick,\n        children: \"Click here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: count\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"#1\",\n      id: \"tweet-quote\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        id: \"twitter-icon\",\n        alt: \"twitter icon\",\n        src: twittericon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 3\n  }, this);\n}\n_s(QuoteBox, \"p1nE8fwOOFTUOE0kBHRMXU5P5lQ=\");\n_c = QuoteBox;\nexport default QuoteBox;\nvar _c;\n$RefreshReg$(_c, \"QuoteBox\");","map":{"version":3,"names":["Button","twittericon","useState","useEffect","useRef","QuoteBox","data","setData","count","setCount","url","fetchIt","res","fetch","cache","json","handleClick","console","log","prevcount"],"sources":["/Users/lucasjones/Desktop/repos/Web-Development-Practice/freeCodeCamp projects/quote-machine/src/QuoteBox.js"],"sourcesContent":["import Button from './Button.js';\nimport twittericon from './images/twittericon.png';\nimport { useState, useEffect, useRef } from 'react';\n\n\nfunction QuoteBox() {\n\tconst [data, setData] = useState('');\n\tconst [count, setCount] = useState(0);\n\t// const dataFetchedRef = useRef(false);\n\t// let url = 'https://swapi.dev/api/planets/'\n\t// let url = 'http://jsonplaceholder.typicode.com/albums/'\n\t// let url = 'https://jsonplaceholder.typicode.com/users'\n\tconst url = 'https://api.adviceslip.com/advice';\n\n\tuseEffect(() => {\n\t\t// if (dataFetchedRef.current) return;\n\t\t// dataFetchedRef.current = true;\n\t\tconst fetchIt = async () => {\n\t\tconst res = await fetch('https://jsonplaceholder.typicode.com/users', {cache: 'no-cache'});\n\t\tvar data = await res.json()\n\n\t\tsetData(data)\n\t\t}\n\n\t\tfetchIt()\n\t}, [])\n\n\t// useEffect(() => {\n\t// \tconsole.log(count)\n\t// })\n\n\tfunction handleClick() {\n\t\tconsole.log(count)\n\t\tsetCount(prevcount => prevcount + 1)\n\t\tconsole.log(count)\n\t}\n\t \n\n\t// useEffect(() => {\n\t// \tconst fetchDat = async () => {\n\t// \t\ttry {\n\t// \t\t\tvar response = await fetch(url)\n\t// \t\t\tvar daz = await response.json()\n\t// \t\t\tconsole.log('daz:', daz)\n\t// \t\t\tsetData(daz)\n\t// \t\t} catch (error) {\n\t// \t\t\tconsole.log('errrrrr', error)\n\t// \t\t}\n\t// \t}\n\t// \t// document.title = `You clicked ${count} times`;\n\t// \tsetData(count);\n\t// \tfetchDat();\n\t// }, [])\n\n\n\t\n\n\t// function handleClick() {\n\t// \tsetCount(prevcount => prevcount + 1)\n\t// \t// try {\n\t// \t// \tfetchDat()\n\t// \t// } catch (error) {\n\t// \t// \tconsole.log('errrrrr2', error)\n\t// \t// }\n\t// }\n\n\t// useEffect(() => {\n\t// \tfetchData();\n\t// }, []);\n\n\t// const url = 'https://api.adviceslip.com/advice';\n\t// const fetchData = async () => {\n\t// \ttry {\n\t// \t\tvar response = await fetch(url);\n\t// \t\tvar json = await response.json();\n\t// \t\tsetData(json.slip.advice);\n\t// \t} catch (error) {\n\t// \t\tconsole.log('error:', error);\n\t// \t}\n\t// }\n\n\t\n\n\t\n\n\t// useEffect(() => {\n\t// \tswapps()\n\t// }, [])\n\n\t// const swapps = async () => {\n\t// \tconst response = await fetch(url);\n\t// \tconst dataz = await response.json()\n\t// \tsetData(dataz)\n\t// }\n\n\t// var ressies = data.results\n\n\t// if (ressies) {\n\t// \tvar item = ressies[Math.floor(Math.random() * ressies.length)];\n\t// \tconsole.log(item)\n\t// }\t\n\n\t// if (!ressies) {\n\t// \treturn <div>LOADING</div>\n\t// }\n\n\t// const fetchData = async () => {\n\t// \tconst response = await fetch(url);\n\t// \tconst datam = await response.json()\n\t// \tsetData(datam)\n\t// }\n\n\t// useEffect(() => {\n\t// \tfetchData()\n\t// }, [])\n\n\t// const updateData = () => {\n\t// \tfetch(url)\n\t// \t\t.then(response => {\n\t// \t\t\treturn response.json()\n\t// \t\t})\n\t// \t\t.then(datas => {\n\t// \t\t\tsetData(datas)\n\t// \t\t})\n\t// }\n\n\t// var ressies = data.results\n\n\t// if (ressies) {\n\t// \tvar item = ressies[Math.floor(Math.random() * ressies.length)];\n\t// \tconsole.log(item)\n\t// }\t\n\n\t// console.log(data)\n\n\t// useEffect(() => {\n\t// \tfetch(url)\n\t// \t\t.then(res => res.json())\n\t// \t\t.then(json => console.log(json))\n\t// \t\t.then(datz => setData(datz))\n\t// \t\t.catch(err => console.log(err));\n\t// }, [])\n\n\t// console.log(data)\n\n\t// if (!data) {\n\t// \treturn <div>LOADING</div>\n\t// }\n\n\treturn(\n\t\t<div id='quote-box'>\n\t\t\t{/*{ressies.map(thing => {\n\t\t\t\treturn(\n\t\t\t\t\t<h2>{thing.name}</h2>\n\t\t\t\t)\n\t\t\t})}*/}\n\t\t\t{/*<h2 id='text'>\"{item.name}\"</h2>*/}\n\t\t\t{/*{data.map(t => {\n\t\t\t\treturn(\n\t\t\t\t\t<h2 key={t.id}>{t.name}</h2>\n\t\t\t\t)\n\t\t\t\t\n\t\t\t})}*/}\n\n\t\t\t{/*<h2>{data.slip.advice}</h2>*/}\n\n\t\t\t<h5 id='author'>-Author</h5>\n\n\t\t\t<div id='new-quote'>\n\t\t\t\t{/*<Button OnClick={fetchData} text='New Quote'/>*/}\n\t\t\t\t{/*<button onClick={handleClick}>Click here</button>*/}\n\t\t\t<button onClick={handleClick}>Click here</button>\n\t\t\t\t<h5>{count}</h5>\n\t\t\t</div>\n\n\t\t\t<a href='#1' id='tweet-quote'>\n\t\t\t\t<img id='twitter-icon' alt='twitter icon' src={twittericon} />\n\t\t\t</a>\n\t\t</div>\n\t);\n}\n\nexport default QuoteBox;"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,aAAa;AAChC,OAAOC,WAAW,MAAM,0BAA0B;AAClD,SAASC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAAC;AAGpD,SAASC,QAAQ,GAAG;EAAA;EACnB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC;EACrC;EACA;EACA;EACA;EACA,MAAMQ,GAAG,GAAG,mCAAmC;EAE/CP,SAAS,CAAC,MAAM;IACf;IACA;IACA,MAAMQ,OAAO,GAAG,YAAY;MAC5B,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,4CAA4C,EAAE;QAACC,KAAK,EAAE;MAAU,CAAC,CAAC;MAC1F,IAAIR,IAAI,GAAG,MAAMM,GAAG,CAACG,IAAI,EAAE;MAE3BR,OAAO,CAACD,IAAI,CAAC;IACb,CAAC;IAEDK,OAAO,EAAE;EACV,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA;EACA;;EAEA,SAASK,WAAW,GAAG;IACtBC,OAAO,CAACC,GAAG,CAACV,KAAK,CAAC;IAClBC,QAAQ,CAACU,SAAS,IAAIA,SAAS,GAAG,CAAC,CAAC;IACpCF,OAAO,CAACC,GAAG,CAACV,KAAK,CAAC;EACnB;;EAGA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAKA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAMA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;;EAEA,oBACC;IAAK,EAAE,EAAC,WAAW;IAAA,wBAgBlB;MAAI,EAAE,EAAC,QAAQ;MAAA,UAAC;IAAO;MAAA;MAAA;MAAA;IAAA,QAAK,eAE5B;MAAK,EAAE,EAAC,WAAW;MAAA,wBAGnB;QAAQ,OAAO,EAAEQ,WAAY;QAAA,UAAC;MAAU;QAAA;QAAA;QAAA;MAAA,QAAS,eAChD;QAAA,UAAKR;MAAK;QAAA;QAAA;QAAA;MAAA,QAAM;IAAA;MAAA;MAAA;MAAA;IAAA,QACX,eAEN;MAAG,IAAI,EAAC,IAAI;MAAC,EAAE,EAAC,aAAa;MAAA,uBAC5B;QAAK,EAAE,EAAC,cAAc;QAAC,GAAG,EAAC,cAAc;QAAC,GAAG,EAAEP;MAAY;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QAC3D;EAAA;IAAA;IAAA;IAAA;EAAA,QACC;AAER;AAAC,GA/KQI,QAAQ;AAAA,KAARA,QAAQ;AAiLjB,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}