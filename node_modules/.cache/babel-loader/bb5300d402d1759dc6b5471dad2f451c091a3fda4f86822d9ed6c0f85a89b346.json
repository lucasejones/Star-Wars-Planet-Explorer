{"ast":null,"code":"var _jsxFileName = \"/Users/lucasjones/Desktop/repos/Web-Development-Practice/freeCodeCamp projects/quote-machine/src/PlanetBox.js\",\n  _s = $RefreshSig$();\nimport Button from './Button.js';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PlanetBox() {\n  _s();\n  const [data, setData] = useState('');\n  const [toggle, setToggle] = useState(false);\n  let url = 'https://swapi.dev/api/planets/';\n  useEffect(() => {\n    const fetchIt = async () => {\n      const res = await fetch(url);\n      var data = await res.json();\n      setData(data);\n    };\n    fetchIt();\n    console.log('re-rendered');\n  }, []);\n  function handleClick() {\n    setToggle(prevState => !prevState);\n  }\n  if (!data) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 10\n    }, this);\n  }\n  const dataResults = data.results;\n  console.log(dataResults);\n  var item = dataResults[Math.floor(Math.random() * dataResults.length)];\n  console.log(item);\n  var keys = [];\n  var values = [];\n  Object.keys(item).slice(0, -5).map((key, index) => {\n    keys.push(key);\n    values.push(item[key]);\n  });\n  console.log('keys', keys);\n  console.log('vals', values);\n  for (let i = 0; i < keys.length; i++) {\n    keys[i] = keys[i].replace(/_/g, ' ');\n    if (keys[0] === 'name' && values[0] === 'Yavin IV') {\n      console.log('gotitititititi');\n      values[0] = 'Yavin-IV';\n    }\n    ;\n  }\n\n  // creating a custom context using require.context\n  // reference here: https://webpack.js.org/guides/dependency-management/#require-context\n\n  function imageImport(r) {\n    let images = {};\n    r.keys().forEach((item, index) => {\n      images[item.replace('./', '').split('.')[0]] = r(item);\n    });\n    return images;\n  }\n  const allImages = imageImport(require.context('./images/', false));\n\n  // if (item.name === 'Yavin IV') {\n  // \titem.name = 'Yavin-IV' \n  // } \n\n  console.log('all images', allImages);\n  console.log('item name', item.name);\n  console.log('correct!', allImages[item.name]);\n  console.log('yavin?', allImages['Yavin-IV']);\n\n  // the space in Yavin IV was causing strange behavior in which the image was correctly indexed from the allImages object, but was not displaying, despite all the other data doing so. Modifying the image filename to swap the space for a hyphen and changing the fetched item name resolves the issue, though surely there's a more robust approach with larger datasets.\n\n  // break up this big component?\n  // assign some slight and themed bg color swap depending on planet\n  // fix all the unstructured css names\n  // allow visit to any specific planet with the little bottom dots?\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"planet-box\",\n    style: {\n      background: 'radial-gradient(rgba(0, 0, 0, 0.1) 50%, rgba(0, 0, 0, 0.3) 90%)',\n      backgroundImage: 'url(' + allImages[item.name] + ')',\n      backgroundSize: 'cover'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      id: \"planet-title\",\n      children: item.name === 'Yavin-IV' ? 'Yavin-iv' : item.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fetched\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fetched-keys\",\n        children: keys.map(i => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"fetched-item\",\n            children: [i, \":\"]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 8\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fetched-values\",\n        children: values.map(i => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"fetched-item\",\n            children: i\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 8\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"new-planet\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        handleClick: handleClick,\n        id: \"new-planet-text\",\n        text: \"Visit New Planet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 3\n  }, this);\n}\n_s(PlanetBox, \"Ocwn9xNedb90qtq4bi9o1N7tm08=\");\n_c = PlanetBox;\nexport default PlanetBox;\nvar _c;\n$RefreshReg$(_c, \"PlanetBox\");","map":{"version":3,"names":["Button","useState","useEffect","PlanetBox","data","setData","toggle","setToggle","url","fetchIt","res","fetch","json","console","log","handleClick","prevState","dataResults","results","item","Math","floor","random","length","keys","values","Object","slice","map","key","index","push","i","replace","imageImport","r","images","forEach","split","allImages","require","context","name","background","backgroundImage","backgroundSize"],"sources":["/Users/lucasjones/Desktop/repos/Web-Development-Practice/freeCodeCamp projects/quote-machine/src/PlanetBox.js"],"sourcesContent":["import Button from './Button.js';\nimport { useState, useEffect} from 'react';\n\n\nfunction PlanetBox() {\n\tconst [data, setData] = useState('');\n\tconst [toggle, setToggle] = useState(false)\n\tlet url = 'https://swapi.dev/api/planets/'\n\n\tuseEffect(() => {\n\t\tconst fetchIt = async () => {\n\t\tconst res = await fetch(url);\n\t\tvar data = await res.json()\n\n\t\tsetData(data)\n\t\t}\n\n\t\tfetchIt()\n\t\tconsole.log('re-rendered')\n\t}, [])\n\n\n\tfunction handleClick() {\n\t\tsetToggle(prevState => !prevState)\n\t}\n\n\t \n\tif (!data) {\n\t\treturn <div className='loading'>loading...</div>\n\t}\n  \t\n\tconst dataResults = data.results\n\tconsole.log(dataResults)\n\tvar item = dataResults[Math.floor(Math.random() * dataResults.length)];\n\tconsole.log(item)\n\n\tvar keys = []\n\tvar values = []\n\n\tObject.keys(item).slice(0, -5).map((key, index) => {\n\t\tkeys.push(key);\n\t\tvalues.push(item[key])\n\t})\n\n\tconsole.log('keys', keys)\n\tconsole.log('vals', values)\n\n\tfor (let i = 0; i < keys.length; i++) {\n\t\tkeys[i] = keys[i].replace(/_/g, ' ');\n\t\tif (keys[0] === 'name' && values[0] === 'Yavin IV') {\n\t\t\tconsole.log('gotitititititi')\n\t\t\tvalues[0] = 'Yavin-IV' \n\t\t}; \n\t}\n\n\n\n\n\n\t// creating a custom context using require.context\n\t// reference here: https://webpack.js.org/guides/dependency-management/#require-context\n\n\tfunction imageImport(r) {\n\t\tlet images = {}\n\t\tr.keys().forEach((item, index) => {\n\t\t\timages[item.replace('./', '').split('.')[0]] = r(item);\n\t\t});\n\t\treturn images\n\t}\n     \n\tconst allImages = imageImport(require.context('./images/', false))\n\n\t// if (item.name === 'Yavin IV') {\n\t// \titem.name = 'Yavin-IV' \n\t// } \n\n\tconsole.log('all images', allImages)\n\tconsole.log('item name', item.name)\n\tconsole.log('correct!', allImages[item.name])\n    console.log('yavin?', allImages['Yavin-IV'])\n\n\t// the space in Yavin IV was causing strange behavior in which the image was correctly indexed from the allImages object, but was not displaying, despite all the other data doing so. Modifying the image filename to swap the space for a hyphen and changing the fetched item name resolves the issue, though surely there's a more robust approach with larger datasets.\n\n\n\n\t// break up this big component?\n\t// assign some slight and themed bg color swap depending on planet\n\t// fix all the unstructured css names\n\t// allow visit to any specific planet with the little bottom dots?\n\n\n\treturn(\n\t\t<div id='planet-box'\n\t\t\tstyle={{\n\t\t\t\tbackground: 'radial-gradient(rgba(0, 0, 0, 0.1) 50%, rgba(0, 0, 0, 0.3) 90%)',\n\t\t\t\tbackgroundImage: 'url('+allImages[item.name]+')',\n\t\t\t\tbackgroundSize: 'cover'\n\t\t\t}}\n\t\t> \n\t\t\t<h1 id='planet-title'>{item.name === 'Yavin-IV' ? 'Yavin-iv' : item.name}</h1>\n\n\t\t\t<div className='fetched'>\n\t\t\t\t<div className='fetched-keys'>\n\t\t\t\t\t{keys.map(i => {\n\t\t\t\t\t\treturn(\n\t\t\t\t\t\t\t<li className='fetched-item' key={i}>{i}:</li>\n\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t})\n\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t\t<div className='fetched-values'>\n\t\t\t\t\t{values.map(i => {\n\t\t\t\t\t\treturn(\n\t\t\t\t\t\t\t<li className='fetched-item' key={i}>{i}</li>\n\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t})\n\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div id='new-planet'>\n\t\t\t\t<Button handleClick={handleClick} id='new-planet-text' text='Visit New Planet'/>\n\t\t\t</div>\n\n\t\t</div>\n\t);\n}\n\nexport default PlanetBox;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}