{"ast":null,"code":"var _jsxFileName = \"/Users/lucasjones/Desktop/repos/Web-Development-Practice/freeCodeCamp projects/quote-machine/src/QuoteBox.js\",\n  _s = $RefreshSig$();\nimport Button from './Button.js';\nimport twittericon from './images/twittericon.png';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction QuoteBox() {\n  _s();\n  const [data, setData] = useState([]);\n  let url = 'https://swapi.dev/api/planets/';\n  // let url = 'http://jsonplaceholder.typicode.com/albums/'\n\n  useEffect(() => {\n    swapps();\n  }, []);\n  const swapps = async () => {\n    const response = await fetch(url);\n    const dataz = await response.json();\n    setData(dataz);\n  };\n  var ressies = data.results;\n  console.log(ressies);\n  // const reslength = ressies.length\n  // console.log(reslength)\n\n  // var item = ressies[Math.floor(Math.random() * reslength)];\n\n  if (!ressies) {\n    console.log(ressies.length());\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"LOADING\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 10\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"quote-box\",\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      id: \"author\",\n      children: \"-Author\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"new-quote\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        text: \"New Quote\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"#1\",\n      id: \"tweet-quote\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        id: \"twitter-icon\",\n        alt: \"twitter icon\",\n        src: twittericon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 3\n  }, this);\n}\n_s(QuoteBox, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = QuoteBox;\nexport default QuoteBox;\nvar _c;\n$RefreshReg$(_c, \"QuoteBox\");","map":{"version":3,"names":["Button","twittericon","useState","useEffect","QuoteBox","data","setData","url","swapps","response","fetch","dataz","json","ressies","results","console","log","length"],"sources":["/Users/lucasjones/Desktop/repos/Web-Development-Practice/freeCodeCamp projects/quote-machine/src/QuoteBox.js"],"sourcesContent":["import Button from './Button.js';\nimport twittericon from './images/twittericon.png';\nimport { useState, useEffect } from 'react';\n\n\nfunction QuoteBox() {\n\tconst [data, setData] = useState([]);\n\tlet url = 'https://swapi.dev/api/planets/'\n\t// let url = 'http://jsonplaceholder.typicode.com/albums/'\n\n\n\tuseEffect(() => {\n\t\tswapps()\n\t}, [])\n\n\tconst swapps = async () => {\n\t\tconst response = await fetch(url);\n\t\tconst dataz = await response.json()\n\t\tsetData(dataz)\n\t}\n\n\tvar ressies = data.results\n\tconsole.log(ressies)\n\t// const reslength = ressies.length\n\t// console.log(reslength)\n\n\t// var item = ressies[Math.floor(Math.random() * reslength)];\n\n\tif (!ressies) {\n\t\tconsole.log(ressies.length())\n\t\treturn <div>LOADING</div>\n\t}\n\n\treturn(\n\t\t<div id='quote-box'>\n\t\t\t{/*<h2 id='text'>\"Quote goes here\"</h2>*/}\n\n\t\t\t{/*{ressies.map(thing => {\n\t\t\t\treturn(\n\t\t\t\t\t<h2>{thing.name}</h2>\n\t\t\t\t)\n\t\t\t})}*/}\n\t\t\t{/*<h2>{item}</h2>*/}\n\n\n\t\t\t<h5 id='author'>-Author</h5>\n\n\t\t\t<div id='new-quote'>\n\t\t\t\t<Button text='New Quote'/>\n\t\t\t</div>\n\n\t\t\t<a href='#1' id='tweet-quote'>\n\t\t\t\t<img id='twitter-icon' alt='twitter icon' src={twittericon} />\n\t\t\t</a>\n\t\t</div>\n\t);\n}\n\nexport default QuoteBox;"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,aAAa;AAChC,OAAOC,WAAW,MAAM,0BAA0B;AAClD,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC;AAG5C,SAASC,QAAQ,GAAG;EAAA;EACnB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EACpC,IAAIK,GAAG,GAAG,gCAAgC;EAC1C;;EAGAJ,SAAS,CAAC,MAAM;IACfK,MAAM,EAAE;EACT,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,MAAM,GAAG,YAAY;IAC1B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACH,GAAG,CAAC;IACjC,MAAMI,KAAK,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;IACnCN,OAAO,CAACK,KAAK,CAAC;EACf,CAAC;EAED,IAAIE,OAAO,GAAGR,IAAI,CAACS,OAAO;EAC1BC,OAAO,CAACC,GAAG,CAACH,OAAO,CAAC;EACpB;EACA;;EAEA;;EAEA,IAAI,CAACA,OAAO,EAAE;IACbE,OAAO,CAACC,GAAG,CAACH,OAAO,CAACI,MAAM,EAAE,CAAC;IAC7B,oBAAO;MAAA,UAAK;IAAO;MAAA;MAAA;MAAA;IAAA,QAAM;EAC1B;EAEA,oBACC;IAAK,EAAE,EAAC,WAAW;IAAA,wBAWlB;MAAI,EAAE,EAAC,QAAQ;MAAA,UAAC;IAAO;MAAA;MAAA;MAAA;IAAA,QAAK,eAE5B;MAAK,EAAE,EAAC,WAAW;MAAA,uBAClB,QAAC,MAAM;QAAC,IAAI,EAAC;MAAW;QAAA;QAAA;QAAA;MAAA;IAAE;MAAA;MAAA;MAAA;IAAA,QACrB,eAEN;MAAG,IAAI,EAAC,IAAI;MAAC,EAAE,EAAC,aAAa;MAAA,uBAC5B;QAAK,EAAE,EAAC,cAAc;QAAC,GAAG,EAAC,cAAc;QAAC,GAAG,EAAEhB;MAAY;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QAC3D;EAAA;IAAA;IAAA;IAAA;EAAA,QACC;AAER;AAAC,GAnDQG,QAAQ;AAAA,KAARA,QAAQ;AAqDjB,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}