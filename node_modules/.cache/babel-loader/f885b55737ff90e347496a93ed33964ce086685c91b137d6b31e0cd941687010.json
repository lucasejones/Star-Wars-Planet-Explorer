{"ast":null,"code":"var _jsxFileName = \"/Users/lucasjones/Desktop/repos/Web-Development-Practice/freeCodeCamp projects/quote-machine/src/QuoteBox.js\",\n  _s = $RefreshSig$();\nimport Button from './Button.js';\nimport twittericon from './images/twittericon.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst [data, setData] = useState(null);\nconst [loading, setLoading] = useState(true);\nconst [error, setError] = useState(null);\nfunction QuoteBox() {\n  _s();\n  let url = 'https://swapi.dev/api/planets/1';\n\n  // async function swapi(url) {\n  // \tconst response = fetch(url);\n  // \tvar data = await response.json();\n  // }\n\n  // swapi(url);\n\n  // const getFetch = async (url) => {\n  // \tconst response = await fetch(url);\n  // \tconst myJson = await response.json();\n  // \treturn myJson;\n  // }\n\n  useEffect(() => {\n    fetch(`https://api.github.com/users/eunit99/repos`).then(res => res.json()).then(result => {\n      setIsLoaded(true);\n      setItems(result);\n    },\n    // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      setIsLoaded(true);\n      setError(error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"quote-box\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      id: \"text\",\n      children: \"\\\"Quote goes here\\\"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: getFetch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      id: \"author\",\n      children: \"-Author\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"new-quote\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        text: \"New Quote\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"#1\",\n      id: \"tweet-quote\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        id: \"twitter-icon\",\n        alt: \"twitter icon\",\n        src: twittericon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 3\n  }, this);\n}\n_s(QuoteBox, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = QuoteBox;\nexport default QuoteBox;\nvar _c;\n$RefreshReg$(_c, \"QuoteBox\");","map":{"version":3,"names":["Button","twittericon","data","setData","useState","loading","setLoading","error","setError","QuoteBox","url","useEffect","fetch","then","res","json","result","setIsLoaded","setItems","getFetch"],"sources":["/Users/lucasjones/Desktop/repos/Web-Development-Practice/freeCodeCamp projects/quote-machine/src/QuoteBox.js"],"sourcesContent":["import Button from './Button.js';\nimport twittericon from './images/twittericon.png';\n\nconst [data, setData] = useState(null);\nconst [loading, setLoading] = useState(true);\nconst [error, setError] = useState(null);\n\nfunction QuoteBox() {\n\tlet url = 'https://swapi.dev/api/planets/1'\n\t\n\n\t// async function swapi(url) {\n\t// \tconst response = fetch(url);\n\t// \tvar data = await response.json();\n\t// }\n\n\t// swapi(url);\n\n\t// const getFetch = async (url) => {\n\t// \tconst response = await fetch(url);\n\t// \tconst myJson = await response.json();\n\t// \treturn myJson;\n\t// }\n\n\n\tuseEffect(() => {\n\t  fetch(`https://api.github.com/users/eunit99/repos`)\n\t    .then(res => res.json())\n\t    .then(\n\t      (result) => {\n\t        setIsLoaded(true);\n\t        setItems(result);\n\t      },\n\t      // Note: it's important to handle errors here\n\t      // instead of a catch() block so that we don't swallow\n\t      // exceptions from actual bugs in components.\n\t      (error) => {\n\t        setIsLoaded(true);\n\t        setError(error);\n\t      }\n\t    )\n\t}, [])\n\n\n\n\n\n\treturn(\n\t\t<div id='quote-box'>\n\t\t\t<h2 id='text'>\"Quote goes here\"</h2>\n\t\t\t<h2>{getFetch}</h2>\n\t\t\t<h5 id='author'>-Author</h5>\n\n\t\t\t<div id='new-quote'>\n\t\t\t\t<Button text='New Quote'/>\n\t\t\t</div>\n\n\t\t\t<a href='#1' id='tweet-quote'>\n\t\t\t\t<img id='twitter-icon' alt='twitter icon' src={twittericon} />\n\t\t\t</a>\n\t\t</div>\n\t);\n}\n\nexport default QuoteBox;"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,aAAa;AAChC,OAAOC,WAAW,MAAM,0BAA0B;AAAC;AAEnD,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGC,QAAQ,CAAC,IAAI,CAAC;AACtC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGF,QAAQ,CAAC,IAAI,CAAC;AAC5C,MAAM,CAACG,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,QAAQ,CAAC,IAAI,CAAC;AAExC,SAASK,QAAQ,GAAG;EAAA;EACnB,IAAIC,GAAG,GAAG,iCAAiC;;EAG3C;EACA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;EACA;EACA;;EAGAC,SAAS,CAAC,MAAM;IACdC,KAAK,CAAE,4CAA2C,CAAC,CAChDC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,EAAE,CAAC,CACvBF,IAAI,CACFG,MAAM,IAAK;MACVC,WAAW,CAAC,IAAI,CAAC;MACjBC,QAAQ,CAACF,MAAM,CAAC;IAClB,CAAC;IACD;IACA;IACA;IACCT,KAAK,IAAK;MACTU,WAAW,CAAC,IAAI,CAAC;MACjBT,QAAQ,CAACD,KAAK,CAAC;IACjB,CAAC,CACF;EACL,CAAC,EAAE,EAAE,CAAC;EAMN,oBACC;IAAK,EAAE,EAAC,WAAW;IAAA,wBAClB;MAAI,EAAE,EAAC,MAAM;MAAA,UAAC;IAAiB;MAAA;MAAA;MAAA;IAAA,QAAK,eACpC;MAAA,UAAKY;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAM,eACnB;MAAI,EAAE,EAAC,QAAQ;MAAA,UAAC;IAAO;MAAA;MAAA;MAAA;IAAA,QAAK,eAE5B;MAAK,EAAE,EAAC,WAAW;MAAA,uBAClB,QAAC,MAAM;QAAC,IAAI,EAAC;MAAW;QAAA;QAAA;QAAA;MAAA;IAAE;MAAA;MAAA;MAAA;IAAA,QACrB,eAEN;MAAG,IAAI,EAAC,IAAI;MAAC,EAAE,EAAC,aAAa;MAAA,uBAC5B;QAAK,EAAE,EAAC,cAAc;QAAC,GAAG,EAAC,cAAc;QAAC,GAAG,EAAElB;MAAY;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QAC3D;EAAA;IAAA;IAAA;IAAA;EAAA,QACC;AAER;AAAC,GAvDQQ,QAAQ;AAAA,KAARA,QAAQ;AAyDjB,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}