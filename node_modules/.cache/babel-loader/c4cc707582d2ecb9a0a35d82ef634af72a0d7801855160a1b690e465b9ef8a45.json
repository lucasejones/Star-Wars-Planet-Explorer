{"ast":null,"code":"var _jsxFileName = \"/Users/lucasjones/Desktop/repos/Web-Development-Practice/freeCodeCamp projects/quote-machine/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport PlanetBox from './PlanetBox.js';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [data, setData] = useState('');\n  // const [randNum, setRandNum] = useState(0)\n  // const [toggle, setToggle] = useState(false)\n  let url = 'https://swapi.dev/api/planets/';\n  useEffect(() => {\n    const fetchIt = async () => {\n      const res = await fetch(url);\n      var data = await res.json();\n      setData(data);\n    };\n    fetchIt();\n    console.log('re-rendered');\n  }, []);\n  if (!data) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 10\n    }, this);\n  }\n  function generateRandom(maximum) {\n    var randInt = Math.floor(Math.random() * maximum);\n    return randInt;\n  }\n  var randomNumber = generateRandom(data.length);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"app-title\",\n      children: \"26Pl6a63n63e63t6363 E63x63p63l3o3r3er85 \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"app-title-small-screen\",\n      children: \"2Pla3n3et5 6E6x6p6lorer8 \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"rebel-symbol\",\n      children: \"$\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-container\",\n      children: /*#__PURE__*/_jsxDEV(PlanetBox, {\n        data: data,\n        generateRandom: generateRandom,\n        randomNumber: randomNumber\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 3\n  }, this);\n}\n_s(App, \"VZqd8eS65aqgHhr94QvD8B0VC/4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["PlanetBox","useState","useEffect","App","data","setData","url","fetchIt","res","fetch","json","console","log","generateRandom","maximum","randInt","Math","floor","random","randomNumber","length"],"sources":["/Users/lucasjones/Desktop/repos/Web-Development-Practice/freeCodeCamp projects/quote-machine/src/App.js"],"sourcesContent":["import './App.css';\nimport PlanetBox from './PlanetBox.js';\nimport { useState, useEffect} from 'react';\n\nfunction App() {\n\n\tconst [data, setData] = useState('');\n\t// const [randNum, setRandNum] = useState(0)\n\t// const [toggle, setToggle] = useState(false)\n\tlet url = 'https://swapi.dev/api/planets/'\n\n\tuseEffect(() => {\n\t\tconst fetchIt = async () => {\n\t\t\tconst res = await fetch(url);\n\t\t\tvar data = await res.json()\n\n\t\t\tsetData(data)\n\t\t} \n\n\t\tfetchIt()\n\t\tconsole.log('re-rendered')\n\t}, [])\n\n\tif (!data) {\n\t\treturn <div className='loading'>loading...</div>\n\t}\n\n\tfunction generateRandom(maximum) {\n\t\tvar randInt = Math.floor(Math.random() * maximum)\n\t\treturn randInt \n\t}\n\n\tvar randomNumber = generateRandom(data.length)\n\n\n\n\treturn (\n\t\t<div className='App'>\n\t\t\t<h1 className='app-title'>26Pl6a63n63e63t6363 E63x63p63l3o3r3er85 </h1>\n\t\t\t<h1 className='app-title-small-screen'>2Pla3n3et5 6E6x6p6lorer8 </h1>\n\t\t\t<h2 className='rebel-symbol'>$</h2>\n\t\t\t<div className='content-container'>\n\t\t\t\t<PlanetBox \n\t\t\t\t\tdata={data} \n\t\t\t\t\tgenerateRandom={generateRandom}\n\t\t\t\t\trandomNumber={randomNumber}\n\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default App;\n\n\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,SAAS,MAAM,gBAAgB;AACtC,SAASC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAAC;AAE3C,SAASC,GAAG,GAAG;EAAA;EAEd,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EACpC;EACA;EACA,IAAIK,GAAG,GAAG,gCAAgC;EAE1CJ,SAAS,CAAC,MAAM;IACf,MAAMK,OAAO,GAAG,YAAY;MAC3B,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAACH,GAAG,CAAC;MAC5B,IAAIF,IAAI,GAAG,MAAMI,GAAG,CAACE,IAAI,EAAE;MAE3BL,OAAO,CAACD,IAAI,CAAC;IACd,CAAC;IAEDG,OAAO,EAAE;IACTI,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;EAC3B,CAAC,EAAE,EAAE,CAAC;EAEN,IAAI,CAACR,IAAI,EAAE;IACV,oBAAO;MAAK,SAAS,EAAC,SAAS;MAAA,UAAC;IAAU;MAAA;MAAA;MAAA;IAAA,QAAM;EACjD;EAEA,SAASS,cAAc,CAACC,OAAO,EAAE;IAChC,IAAIC,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAGJ,OAAO,CAAC;IACjD,OAAOC,OAAO;EACf;EAEA,IAAII,YAAY,GAAGN,cAAc,CAACT,IAAI,CAACgB,MAAM,CAAC;EAI9C,oBACC;IAAK,SAAS,EAAC,KAAK;IAAA,wBACnB;MAAI,SAAS,EAAC,WAAW;MAAA,UAAC;IAAwC;MAAA;MAAA;MAAA;IAAA,QAAK,eACvE;MAAI,SAAS,EAAC,wBAAwB;MAAA,UAAC;IAAyB;MAAA;MAAA;MAAA;IAAA,QAAK,eACrE;MAAI,SAAS,EAAC,cAAc;MAAA,UAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QAAK,eACnC;MAAK,SAAS,EAAC,mBAAmB;MAAA,uBACjC,QAAC,SAAS;QACT,IAAI,EAAEhB,IAAK;QACX,cAAc,EAAES,cAAe;QAC/B,YAAY,EAAEM;MAAa;QAAA;QAAA;QAAA;MAAA;IAE1B;MAAA;MAAA;MAAA;IAAA,QACG;EAAA;IAAA;IAAA;IAAA;EAAA,QACD;AAER;AAAC,GA/CQhB,GAAG;AAAA,KAAHA,GAAG;AAiDZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}