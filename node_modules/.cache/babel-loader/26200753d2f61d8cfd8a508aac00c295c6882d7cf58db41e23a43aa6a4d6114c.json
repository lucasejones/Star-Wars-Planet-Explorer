{"ast":null,"code":"var _jsxFileName = \"/Users/lucasjones/Desktop/repos/Web-Development-Practice/freeCodeCamp projects/quote-machine/src/QuoteBox.js\",\n  _s = $RefreshSig$();\nimport Button from './Button.js';\nimport twittericon from './images/twittericon.png';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction QuoteBox() {\n  _s();\n  const [data, setData] = useState([]);\n  let url = 'https://swapi.dev/api/planets/';\n  // let url = 'http://jsonplaceholder.typicode.com/albums/'\n\n  // useEffect(() => {\n  // \tasync function loadswaps() {\n  // \t\tconst response = await fetch(url);\n  // \t\tconst datas = await response.json()\n  // \t\tsetData(datas)\n  // \t}\n  // \tloadswaps()\n  // }, [])\n\n  useEffect(() => {\n    swapps();\n  }, []);\n  const swapps = async () => {\n    const response = await fetch(url);\n    const dataz = await response.json();\n    setData(dataz);\n  };\n\n  // async function swapi(url) {\n  // \tconst response = fetch(url);\n  // \tvar data = await response.json();\n  // }\n\n  // swapi(url);\n\n  // const getFetch = async (url) => {\n  // \tconst response = await fetch(url);\n  // \tconst myJson = await response.json();\n  // \treturn myJson;\n  // }\n\n  // useEffect(() => {\n  //   fetch(url)\n  //     .then(res => res.json())\n  //     .then(\n  //       (result) => {\n  //       \tconsole.log(result)\n  //         setLoading(false);\n  //         setData(result);\n  //       }).catch((e) => {\n  //       \tconsole.error(`error: ${e}`)\n  //       });\t      \n  // }, [])\n\n  // \tuseEffect(() => {\n  //   const fetchData = async () => {\n  //     try {\n  //         const result = await fetch(url);\n  //         setData(result)\n  //         // console.log(result)\n  //     } catch (e){\n  //       console.log(e)\n  //     }\n  //   };\n  //   fetchData();\n  // });\n  // console.log(data)\n\n  // console.log('hweoiuhro')\n  console.log(data.results);\n  var ressies = data.results;\n  console.log(ressies);\n  if (ressies === null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"LOADING\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 10\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"quote-box\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      id: \"text\",\n      children: \"\\\"Quote goes here\\\"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 4\n    }, this), ressies.map(thing => {\n      return /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: thing.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 6\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"h5\", {\n      id: \"author\",\n      children: \"-Author\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"new-quote\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        text: \"New Quote\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"#1\",\n      id: \"tweet-quote\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        id: \"twitter-icon\",\n        alt: \"twitter icon\",\n        src: twittericon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 3\n  }, this);\n}\n_s(QuoteBox, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = QuoteBox;\nexport default QuoteBox;\nvar _c;\n$RefreshReg$(_c, \"QuoteBox\");","map":{"version":3,"names":["Button","twittericon","useState","useEffect","QuoteBox","data","setData","url","swapps","response","fetch","dataz","json","console","log","results","ressies","map","thing","name"],"sources":["/Users/lucasjones/Desktop/repos/Web-Development-Practice/freeCodeCamp projects/quote-machine/src/QuoteBox.js"],"sourcesContent":["import Button from './Button.js';\nimport twittericon from './images/twittericon.png';\nimport { useState, useEffect } from 'react';\n\n\n\nfunction QuoteBox() {\n\tconst [data, setData] = useState([]);\n\tlet url = 'https://swapi.dev/api/planets/'\n\t// let url = 'http://jsonplaceholder.typicode.com/albums/'\n\n\t// useEffect(() => {\n\t// \tasync function loadswaps() {\n\t// \t\tconst response = await fetch(url);\n\t// \t\tconst datas = await response.json()\n\t// \t\tsetData(datas)\n\t// \t}\n\t// \tloadswaps()\n\t// }, [])\n\n\tuseEffect(() => {\n\t\tswapps()\n\t}, [])\n\n\tconst swapps = async () => {\n\t\tconst response = await fetch(url);\n\t\tconst dataz = await response.json()\n\t\tsetData(dataz)\n\t}\n\t\n\n\t// async function swapi(url) {\n\t// \tconst response = fetch(url);\n\t// \tvar data = await response.json();\n\t// }\n\n\t// swapi(url);\n\n\t// const getFetch = async (url) => {\n\t// \tconst response = await fetch(url);\n\t// \tconst myJson = await response.json();\n\t// \treturn myJson;\n\t// }\n\n\n\t// useEffect(() => {\n\t//   fetch(url)\n\t//     .then(res => res.json())\n\t//     .then(\n\t//       (result) => {\n\t//       \tconsole.log(result)\n\t//         setLoading(false);\n\t//         setData(result);\n\t//       }).catch((e) => {\n\t//       \tconsole.error(`error: ${e}`)\n\t//       });\t      \n\t// }, [])\n\n// \tuseEffect(() => {\n  //   const fetchData = async () => {\n  //     try {\n  //         const result = await fetch(url);\n  //         setData(result)\n  //         // console.log(result)\n  //     } catch (e){\n  //       console.log(e)\n  //     }\n  //   };\n  //   fetchData();\n  // });\n\t// console.log(data)\n\n\n\t// console.log('hweoiuhro')\n\tconsole.log(data.results)\n\tvar ressies = data.results\n\tconsole.log(ressies)\n\n\tif (ressies === null) {\n\t\treturn <div>LOADING</div>\n\t}\n\n\treturn(\n\t\t<div id='quote-box'>\n\t\t\t<h2 id='text'>\"Quote goes here\"</h2>\n\n\t\t\t{ressies.map(thing => {\n\t\t\t\treturn(\n\t\t\t\t\t<h2>{thing.name}</h2>\n\t\t\t\t)\n\t\t\t})}\n\n\t\t\t<h5 id='author'>-Author</h5>\n\n\t\t\t<div id='new-quote'>\n\t\t\t\t<Button text='New Quote'/>\n\t\t\t</div>\n\n\t\t\t<a href='#1' id='tweet-quote'>\n\t\t\t\t<img id='twitter-icon' alt='twitter icon' src={twittericon} />\n\t\t\t</a>\n\t\t</div>\n\t);\n}\n\nexport default QuoteBox;"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,aAAa;AAChC,OAAOC,WAAW,MAAM,0BAA0B;AAClD,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC;AAI5C,SAASC,QAAQ,GAAG;EAAA;EACnB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EACpC,IAAIK,GAAG,GAAG,gCAAgC;EAC1C;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEAJ,SAAS,CAAC,MAAM;IACfK,MAAM,EAAE;EACT,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,MAAM,GAAG,YAAY;IAC1B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACH,GAAG,CAAC;IACjC,MAAMI,KAAK,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;IACnCN,OAAO,CAACK,KAAK,CAAC;EACf,CAAC;;EAGD;EACA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;EACA;EACA;;EAGA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAED;EACE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACD;;EAGA;EACAE,OAAO,CAACC,GAAG,CAACT,IAAI,CAACU,OAAO,CAAC;EACzB,IAAIC,OAAO,GAAGX,IAAI,CAACU,OAAO;EAC1BF,OAAO,CAACC,GAAG,CAACE,OAAO,CAAC;EAEpB,IAAIA,OAAO,KAAK,IAAI,EAAE;IACrB,oBAAO;MAAA,UAAK;IAAO;MAAA;MAAA;MAAA;IAAA,QAAM;EAC1B;EAEA,oBACC;IAAK,EAAE,EAAC,WAAW;IAAA,wBAClB;MAAI,EAAE,EAAC,MAAM;MAAA,UAAC;IAAiB;MAAA;MAAA;MAAA;IAAA,QAAK,EAEnCA,OAAO,CAACC,GAAG,CAACC,KAAK,IAAI;MACrB,oBACC;QAAA,UAAKA,KAAK,CAACC;MAAI;QAAA;QAAA;QAAA;MAAA,QAAM;IAEvB,CAAC,CAAC,eAEF;MAAI,EAAE,EAAC,QAAQ;MAAA,UAAC;IAAO;MAAA;MAAA;MAAA;IAAA,QAAK,eAE5B;MAAK,EAAE,EAAC,WAAW;MAAA,uBAClB,QAAC,MAAM;QAAC,IAAI,EAAC;MAAW;QAAA;QAAA;QAAA;MAAA;IAAE;MAAA;MAAA;MAAA;IAAA,QACrB,eAEN;MAAG,IAAI,EAAC,IAAI;MAAC,EAAE,EAAC,aAAa;MAAA,uBAC5B;QAAK,EAAE,EAAC,cAAc;QAAC,GAAG,EAAC,cAAc;QAAC,GAAG,EAAElB;MAAY;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QAC3D;EAAA;IAAA;IAAA;IAAA;EAAA,QACC;AAER;AAAC,GAjGQG,QAAQ;AAAA,KAARA,QAAQ;AAmGjB,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}