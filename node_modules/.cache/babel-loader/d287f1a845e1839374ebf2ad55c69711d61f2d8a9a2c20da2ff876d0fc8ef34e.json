{"ast":null,"code":"var _jsxFileName = \"/Users/lucasjones/Desktop/repos/Web-Development-Practice/freeCodeCamp projects/quote-machine/src/PlanetBox.js\",\n  _s = $RefreshSig$();\nimport Button from './Button.js';\nimport { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PlanetBox() {\n  _s();\n  const initialState = 0;\n  const [count, setCount] = useState(initialState);\n  const [data, setData] = useState('');\n  // const [toggle, setToggle] = useState(false)\n  const imageRef = useRef('');\n  let url = 'https://swapi.dev/api/planets/';\n  useEffect(() => {\n    const fetchIt = async () => {\n      const res = await fetch(url);\n      var data = await res.json();\n      setData(data);\n    };\n    function imageImport(r) {\n      let images = {};\n      r.keys().forEach((item, index) => {\n        images[item.replace('./', '').split('.')[0]] = r(item);\n      });\n      return images;\n    }\n    const allImages = imageImport(require.context('./images/', false));\n    if (item.name === 'Yavin IV') {\n      item.name = 'Yavin-IV';\n    }\n    console.log('oiweklrn', allImages[item.name]);\n    imageRef = allImages[item.name];\n    if (count != initialState) {\n      console.log(imageRef);\n      imageRef.current.animate({\n        opacity: [1, 0, 0.2, 1]\n      }, 500);\n    }\n    fetchIt();\n    console.log('re-rendered');\n  }, [count]);\n  function handleClick() {\n    // setToggle(prevState => !prevState)\n    setCount(prevCount => prevCount + 1);\n    console.log('count:', count);\n  }\n  if (!data) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 10\n    }, this);\n  }\n  const dataResults = data.results;\n  // console.log(dataResults)\n\n  // obtaining a random item\n  var item = dataResults[Math.floor(Math.random() * dataResults.length)];\n  console.log(item);\n\n  // preparing the arrays that will be displayed\n  var keys = [];\n  var values = [];\n  Object.keys(item).slice(0, -5).map((key, index) => {\n    keys.push(key);\n    values.push(item[key]);\n  });\n  for (let i = 0; i < keys.length; i++) {\n    keys[i] = keys[i].replace(/_/g, ' ');\n  }\n\n  // console.log('keys', keys)\n  // console.log('vals', values)\n\n  // creating a custom context using require.context\n  // reference here: https://webpack.js.org/guides/dependency-management/#require-context\n\n  // function imageImport(r) {\n  // \tlet images = {}\n  // \tr.keys().forEach((item, index) => {\n  // \t\timages[item.replace('./', '').split('.')[0]] = r(item);\n  // \t});\n  // \treturn images\n  // }\n\n  // const allImages = imageImport(require.context('./images/', false))\n\n  // if (item.name === 'Yavin IV') {\n  // \titem.name = 'Yavin-IV' \n  // } \n\n  // console.log('oiweklrn', allImages[item.name])\n  // imageRef = allImages[item.name]\n\n  // console.log('all images', allImages)\n  // console.log('item name', item.name)\n  // console.log('correct!', allImages[item.name])\n  // console.log('yavin?', allImages['Yavin-IV'])\n\n  // the space in Yavin IV was causing strange behavior in which the image was correctly indexed from the allImages object, but was not displaying, despite all the other data doing so. Modifying the image filename to swap the space for a hyphen and changing the fetched item name resolves the issue, though surely there's a more robust approach with larger datasets.\n\n  // To-Dos:\n  // break up this big component? (4)\n  // assign some slight and themed bg color swap depending on planet (2)\n  // fix all the unstructured css names (5)\n  // prevent the current planet from loading again (1)\n  // allow visit to any specific planet with the little bottom dots? (3)\n  // create fade animation when switching planet images\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"planet-box\",\n    style: {\n      background: 'radial-gradient(rgba(0, 0, 0, 0.1) 50%, rgba(0, 0, 0, 0.3) 90%)',\n      backgroundImage: 'url(' + allImages[item.name] + ')',\n      backgroundSize: 'cover'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      id: \"planet-title\",\n      children: item.name === 'Yavin-IV' ? 'Yavin iv' : item.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fetched\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fetched-keys\",\n        children: keys.map(i => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"fetched-item\",\n            children: [i, \":\"]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 8\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fetched-values\",\n        children: values.map(i => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"fetched-item\",\n            children: i\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 8\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"new-planet\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        handleClick: handleClick,\n        id: \"new-planet-text\",\n        text: \"Visit New Planet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 3\n  }, this);\n}\n_s(PlanetBox, \"p+p0o3r4U6l/yQsF5Ivo4SVmNkM=\");\n_c = PlanetBox;\nexport default PlanetBox;\nvar _c;\n$RefreshReg$(_c, \"PlanetBox\");","map":{"version":3,"names":["Button","useState","useEffect","useRef","PlanetBox","initialState","count","setCount","data","setData","imageRef","url","fetchIt","res","fetch","json","imageImport","r","images","keys","forEach","item","index","replace","split","allImages","require","context","name","console","log","current","animate","opacity","handleClick","prevCount","dataResults","results","Math","floor","random","length","values","Object","slice","map","key","push","i","background","backgroundImage","backgroundSize"],"sources":["/Users/lucasjones/Desktop/repos/Web-Development-Practice/freeCodeCamp projects/quote-machine/src/PlanetBox.js"],"sourcesContent":["import Button from './Button.js';\nimport { useState, useEffect, useRef} from 'react';\n\n\nfunction PlanetBox() {\n\tconst initialState = 0;\n\tconst [count, setCount] = useState(initialState);\n\n\tconst [data, setData] = useState('');\n\t// const [toggle, setToggle] = useState(false)\n\tconst imageRef = useRef('');\n\tlet url = 'https://swapi.dev/api/planets/'\n\n\tuseEffect(() => {\n\t\tconst fetchIt = async () => {\n\t\tconst res = await fetch(url);\n\t\tvar data = await res.json()\n\n\t\tsetData(data)\n\t\t}\n\n\t\tfunction imageImport(r) {\n\t\t\tlet images = {}\n\t\t\tr.keys().forEach((item, index) => {\n\t\t\t\timages[item.replace('./', '').split('.')[0]] = r(item);\n\t\t\t});\n\t\t\treturn images\n\t\t}\n\t     \n\t\tconst allImages = imageImport(require.context('./images/', false))\n\n\t\tif (item.name === 'Yavin IV') {\n\t\t\titem.name = 'Yavin-IV' \n\t\t} \n\n\t\tconsole.log('oiweklrn', allImages[item.name])\n\t\timageRef = allImages[item.name]\n\n\t\tif (count != initialState) {\n\t\t\tconsole.log(imageRef)\n\t\t\timageRef.current.animate(\n\t\t\t\t{\n\t\t\t\t\topacity: [1, 0, 0.2, 1]\n\t\t\t\t}, 500);\n\t\t}\n\t\t\t\n\t\t\n\n\t\tfetchIt()\n\t\tconsole.log('re-rendered')\n\t}, [count])\n\n\n\tfunction handleClick() {\n\t\t// setToggle(prevState => !prevState)\n\t\tsetCount(prevCount => prevCount + 1)\n\t\tconsole.log('count:', count)\n\t}\n\n\t \n\tif (!data) {\n\t\treturn <div className='loading'>loading...</div>\n\t}\n  \t\n\tconst dataResults = data.results\n\t// console.log(dataResults)\n\n\t// obtaining a random item\n\tvar item = dataResults[Math.floor(Math.random() * dataResults.length)];\n\tconsole.log(item)\n\n\n\t// preparing the arrays that will be displayed\n\tvar keys = []\n\tvar values = []\n\tObject.keys(item).slice(0, -5).map((key, index) => {\n\t\tkeys.push(key);\n\t\tvalues.push(item[key])\n\t})\n\n\tfor (let i = 0; i < keys.length; i++) {\n\t\tkeys[i] = keys[i].replace(/_/g, ' ');\n\t}\n\n\t// console.log('keys', keys)\n\t// console.log('vals', values)\n\n\n\n\n\t// creating a custom context using require.context\n\t// reference here: https://webpack.js.org/guides/dependency-management/#require-context\n\n\t// function imageImport(r) {\n\t// \tlet images = {}\n\t// \tr.keys().forEach((item, index) => {\n\t// \t\timages[item.replace('./', '').split('.')[0]] = r(item);\n\t// \t});\n\t// \treturn images\n\t// }\n     \n\t// const allImages = imageImport(require.context('./images/', false))\n\n\t// if (item.name === 'Yavin IV') {\n\t// \titem.name = 'Yavin-IV' \n\t// } \n\n\t// console.log('oiweklrn', allImages[item.name])\n\t// imageRef = allImages[item.name]\n\n\t// console.log('all images', allImages)\n\t// console.log('item name', item.name)\n\t// console.log('correct!', allImages[item.name])\n    // console.log('yavin?', allImages['Yavin-IV'])\n\n\t// the space in Yavin IV was causing strange behavior in which the image was correctly indexed from the allImages object, but was not displaying, despite all the other data doing so. Modifying the image filename to swap the space for a hyphen and changing the fetched item name resolves the issue, though surely there's a more robust approach with larger datasets.\n\n\n\t// To-Dos:\n\t// break up this big component? (4)\n\t// assign some slight and themed bg color swap depending on planet (2)\n\t// fix all the unstructured css names (5)\n\t// prevent the current planet from loading again (1)\n\t// allow visit to any specific planet with the little bottom dots? (3)\n\t// create fade animation when switching planet images\n\n\n\treturn(\n\t\t<div id='planet-box'\n\t\t\tstyle={{\n\t\t\t\tbackground: 'radial-gradient(rgba(0, 0, 0, 0.1) 50%, rgba(0, 0, 0, 0.3) 90%)',\n\t\t\t\tbackgroundImage: 'url('+allImages[item.name]+')',\n\t\t\t\tbackgroundSize: 'cover'\n\t\t\t}}\n\t\t> \t\n\t\t\t<h1 id='planet-title'>{item.name === 'Yavin-IV' ? 'Yavin iv' : item.name}</h1>\n\n\t\t\t<div className='fetched'>\n\t\t\t\t<div className='fetched-keys'>\n\t\t\t\t\t{keys.map(i => {\n\t\t\t\t\t\treturn(\n\t\t\t\t\t\t\t<li className='fetched-item' key={i}>{i}:</li>\n\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t})\n\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t\t<div className='fetched-values'>\n\t\t\t\t\t{values.map(i => {\n\t\t\t\t\t\treturn(\n\t\t\t\t\t\t\t<li className='fetched-item' key={i}>{i}</li>\n\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t})\n\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div id='new-planet'>\n\t\t\t\t<Button handleClick={handleClick} id='new-planet-text' text='Visit New Planet'/>\n\t\t\t</div>\n\n\t\t</div>\n\t);\n}\n\nexport default PlanetBox;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}