{"ast":null,"code":"var _jsxFileName = \"/Users/lucasjones/Desktop/repos/Web-Development-Practice/freeCodeCamp projects/quote-machine/src/QuoteBox.js\",\n  _s = $RefreshSig$();\nimport Button from './Button.js';\nimport twittericon from './images/twittericon.png';\nimport { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction QuoteBox() {\n  _s();\n  const [data, setData] = useState('');\n  const [toggle, setToggle] = useState(false);\n  let url = 'https://swapi.dev/api/planets/';\n  // let url = 'http://jsonplaceholder.typicode.com/albums/'\n  // let url = 'https://jsonplaceholder.typicode.com/users'\n  // const url = 'https://api.adviceslip.com/advice';\n\n  useEffect(() => {\n    const fetchIt = async () => {\n      const res = await fetch(url);\n      var data = await res.json();\n      setData(data);\n    };\n    fetchIt();\n    console.log('re-rendered');\n  }, []);\n  function handleClick() {\n    setToggle(prevState => !prevState);\n  }\n  if (!data) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"LOADING\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 10\n    }, this);\n  }\n  const ressies = data.results;\n  console.log(ressies);\n  var item = ressies[Math.floor(Math.random() * ressies.length)];\n  console.log(item);\n  var keys = [];\n  var values = [];\n  Object.keys(item).slice(0, -5).map((key, index) => {\n    keys.push(key);\n    values.push(item[key]);\n  });\n  for (let i = 0; i < keys.length; i++) {\n    keys[i] = keys[i].replace(/_/g, ' ');\n  }\n\n  // get the quotebox to be one consistent size\n  // fix the bottom of the page to be a consistent gap\n  // place the fetched data in the same spot each time in the box\n  // display a semitransparent background image of the planet described\n  // assign some slight and themed bg color swap depending on planet\n  // call it something cool\n  // get rid of the twitter thing\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"planet-box\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      id: \"text\",\n      children: item.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fetched\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fetched-keys\",\n        children: keys.map(i => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"fetched-data\",\n            children: [i, \":\"]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 8\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fetched-values\",\n        children: values.map(i => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"fetched-data\",\n            children: i\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 8\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"new-quote\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        handleClick: handleClick,\n        text: \"New Planet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 3\n  }, this);\n}\n_s(QuoteBox, \"Ocwn9xNedb90qtq4bi9o1N7tm08=\");\n_c = QuoteBox;\nexport default QuoteBox;\nvar _c;\n$RefreshReg$(_c, \"QuoteBox\");","map":{"version":3,"names":["Button","twittericon","useState","useEffect","useRef","QuoteBox","data","setData","toggle","setToggle","url","fetchIt","res","fetch","json","console","log","handleClick","prevState","ressies","results","item","Math","floor","random","length","keys","values","Object","slice","map","key","index","push","i","replace","name"],"sources":["/Users/lucasjones/Desktop/repos/Web-Development-Practice/freeCodeCamp projects/quote-machine/src/QuoteBox.js"],"sourcesContent":["import Button from './Button.js';\nimport twittericon from './images/twittericon.png';\nimport { useState, useEffect, useRef } from 'react';\n\n\nfunction QuoteBox() {\n\tconst [data, setData] = useState('');\n\tconst [toggle, setToggle] = useState(false)\n\tlet url = 'https://swapi.dev/api/planets/'\n\t// let url = 'http://jsonplaceholder.typicode.com/albums/'\n\t// let url = 'https://jsonplaceholder.typicode.com/users'\n\t// const url = 'https://api.adviceslip.com/advice';\n\n\tuseEffect(() => {\n\t\tconst fetchIt = async () => {\n\t\tconst res = await fetch(url);\n\t\tvar data = await res.json()\n\n\t\tsetData(data)\n\t\t}\n\n\t\tfetchIt()\n\t\tconsole.log('re-rendered')\n\t}, [])\n\n\n\tfunction handleClick() {\n\t\tsetToggle(prevState => !prevState)\n\t}\n\n\t \n\tif (!data) {\n\t\treturn <div>LOADING</div>\n\t}\n  \n\tconst ressies = data.results\n\tconsole.log(ressies)\n\tvar item = ressies[Math.floor(Math.random() * ressies.length)];\n\tconsole.log(item)\n\n\tvar keys = []\n\tvar values = []\n\n\tObject.keys(item).slice(0, -5).map((key, index) => {\n\t\tkeys.push(key);\n\t\tvalues.push(item[key])\n\t})\n\n\tfor (let i = 0; i < keys.length; i++) {\n\t\tkeys[i] = keys[i].replace(/_/g, ' ');\n\t}\n\n\t// get the quotebox to be one consistent size\n\t// fix the bottom of the page to be a consistent gap\n\t// place the fetched data in the same spot each time in the box\n\t// display a semitransparent background image of the planet described\n\t// assign some slight and themed bg color swap depending on planet\n\t// call it something cool\n\t// get rid of the twitter thing\n\n\n\treturn(\n\t\t<div id='planet-box'>\n\t\t\n\t\t\t{/*<h2 id='text'>\"Quote Goes Here\"</h2>*/}\n\t\t\t<h1 id='text'>{item.name}</h1>\n\n\n\t\t\t<div className='fetched'>\n\t\t\t\t<div className='fetched-keys'>\n\t\t\t\t\t{keys.map(i => {\n\t\t\t\t\t\treturn(\n\t\t\t\t\t\t\t<li className='fetched-data' key={i}>{i}:</li>\n\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t})\n\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t\t<div className='fetched-values'>\n\t\t\t\t\t{values.map(i => {\n\t\t\t\t\t\treturn(\n\t\t\t\t\t\t\t<li className='fetched-data' key={i}>{i}</li>\n\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t})\n\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div id='new-quote'>\n\t\t\t\t<Button handleClick={handleClick} text='New Planet'/>\n\t\t\t</div>\n\n\t\t\t{/*<a href='#1' id='tweet-quote'>\n\t\t\t\t<img id='twitter-icon' alt='twitter icon' src={twittericon} />\n\t\t\t</a>*/}\n\t\t</div>\n\t);\n}\n\nexport default QuoteBox;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}